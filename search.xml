<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/post/3eeb.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>自动生成</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hello world</tag>
        <tag>auto</tag>
      </tags>
  </entry>
  <entry>
    <title>AI-wcz test</title>
    <url>/post/f6f3.html</url>
    <content><![CDATA[<p>I am AI-wcz.</p>
<p>I’m writing a new page.</p>
<p>This is part of my code:</p>
<span id="more"></span>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> demjson</span><br><span class="line"><span class="keyword">import</span> tablib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLDATA</span>(<span class="params">url, kv</span>):</span></span><br><span class="line">	<span class="keyword">try</span>:</span><br><span class="line">		r = requests.get(url, headers = kv, timeout = <span class="number">30</span>)</span><br><span class="line">		r.raise_for_status()</span><br><span class="line">		r.encoding = r.apparent_encoding</span><br><span class="line">		<span class="keyword">return</span> r.text</span><br><span class="line">	<span class="keyword">except</span>:</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;ERROR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">	urla = <span class="string">&quot;http://stockdata.stock.hexun.com/zrbg/data/zrbList.aspx?date=2018-12-31&amp;count=20&amp;pname=20&amp;titType=null&amp;page=&quot;</span></span><br><span class="line">	pages = <span class="number">208</span></span><br><span class="line">	kv = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">	data = []</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,pages+<span class="number">1</span>):</span><br><span class="line">		url = urla + <span class="built_in">str</span>(page)</span><br><span class="line">		demo = getHTMLDATA(url, kv)</span><br><span class="line">		html = demo[<span class="number">13</span>:-<span class="number">1</span>]</span><br><span class="line">		dataDict = demjson.decode(html)</span><br><span class="line">		dataList = dataDict[<span class="string">&#x27;list&#x27;</span>]</span><br><span class="line">		<span class="keyword">for</span> dictInList <span class="keyword">in</span> dataList:</span><br><span class="line">			<span class="keyword">del</span> dictInList[<span class="string">&#x27;StockNameLink&#x27;</span>]</span><br><span class="line">			<span class="keyword">del</span> dictInList[<span class="string">&#x27;Hstock&#x27;</span>]</span><br><span class="line">			<span class="keyword">del</span> dictInList[<span class="string">&#x27;Wstock&#x27;</span>]</span><br><span class="line">			<span class="keyword">del</span> dictInList[<span class="string">&#x27;Tstock&#x27;</span>]</span><br><span class="line">		data += dataList</span><br><span class="line">		time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">	allData = []</span><br><span class="line">	tableHeader = <span class="built_in">tuple</span>([<span class="string">&quot;序号&quot;</span>,<span class="string">&quot;股票名称/代码&quot;</span>,<span class="string">&quot;股东责任&quot;</span>,<span class="string">&quot;总得分&quot;</span>,<span class="string">&quot;等级&quot;</span>,<span class="string">&quot;员工责任&quot;</span>,<span class="string">&quot;供应商、客户和消费者权益责任&quot;</span>,<span class="string">&quot;环境责任&quot;</span>,<span class="string">&quot;社会责任&quot;</span>])</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> row <span class="keyword">in</span> data:</span><br><span class="line">		body = []</span><br><span class="line">		<span class="keyword">for</span> v <span class="keyword">in</span> row.values():</span><br><span class="line">			body.append(v)</span><br><span class="line">		allData.append(<span class="built_in">tuple</span>(body))</span><br><span class="line">	</span><br><span class="line">	allData = tablib.Dataset(*allData, headers=tableHeader)</span><br><span class="line">	<span class="built_in">open</span>(<span class="string">&#x27;C:\\Users\\song\\Desktop\\2018-data.xlsx&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(allData.xlsx)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>

<p>Good to see you!</p>
]]></content>
      <categories>
        <category>AI</category>
        <category>test</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>test</tag>
      </tags>
  </entry>
</search>
